service: Employe-Certification-Get-API
provider:
  name: aws
  region: ap-south-1
  runtime: nodejs18.x
  stage: dev
  environment:
    DYNAMODB_TABLE_NAME: ${self:custom.EmployeCertificationTable}
custom:
  EmployeCertificationTable: EmployeeDetailsTable
plugins:
  - serverless-iam-roles-per-function
functions: 
  getCertificates:
    handler: app.getAllCertificates
    name: get-AllCertificate
    memorySize: 128 #mb
    timeout: 5 # seconds
    events:
      - http:
          path: employees
          method: GET
    iamRoleStatements: 
      - Effect: "Allow"
        Action: 
          - "dynamodb:GetItem"
          - "dynamodb:Scan"  # Add this line to grant Scan permission
        Resource: !GetAtt EmployCertificate.Arn
  getDetail:
    handler: app.getCertificate
    name: get-Certificate
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: employee/{empID}
          method: GET
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:GetItem"
          - "dynamodb:Scan"  # Add this line to grant Scan permission
        Resource: !GetAtt EmployCertificate.Arn
resources: 
  Resources:
    EmployCertificate: 
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.EmployeCertificationTable}
        AttributeDefinitions:
          - AttributeName: empID
            AttributeType: S
        KeySchema: 
         - AttributeName: empID
           KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
